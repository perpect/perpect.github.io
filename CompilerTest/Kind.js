var Kind = {
    Unknown : 0,
    EndOfToken : 1,
    NullLiteral : 2,
    TrueLiteral : 3,
    FalseLiteral : 4,
    NumberLiteral : 5,
    StringLiteral : 6,
    Identifier : 7,

    Variable : 8,
    For : 9,
    Break : 10,
    Continue : 11,
    If : 12,
    Elif : 13,
    Else : 14,
    Print : 15,
    PrintLine : 16,

    LogicalAnd : 17,
    LogicalOr : 18,
    Assignment : 19,
    Add : 20,
    Subtract : 21,
    Multiply : 22,
    Divide : 23,
    Modulo : 24,
    Equal : 25,
    NotEqual : 26,
    LessThan : 27,
    GreaterThan : 28,
    LessOrEqual : 29,
    GreaterOrEqual : 30,

    Comma : 31,
    Colon : 32,
    Semicolon : 33,
    LeftParen : 34,
    RightParen : 35,
    LeftBrace : 36,
    RightBrace : 37,
    LeftBraket : 38,
    RightBraket : 39
};
Object.freeze(Kind);

var stringToKind = {
    "#unknown" : Kind.Unknown,
    "#EndOfToken" : Kind.EndOfToken,
    "null" : Kind.NullLiteral,
    "true" : Kind.TrueLiteral,
    "false" : Kind.FalseLiteral,
    "#Number" : Kind.NumberLiteral,
    "#String" : Kind.StringLiteral,
    "#identifier" : Kind.Identifier,
    "var" : Kind.Variable,
    "for" : Kind.For,
    "break" : Kind.Break,
    "continue" : Kind.Continue,
    "if" : Kind.If,
    "elif" : Kind.Elif,
    "else" : Kind.Else,
    "print" : Kind.Print,
    "printLine" : Kind.PrintLine,
    "and" : Kind.LogicalAnd,
    "or" : Kind.LogicalOr,
    "=" : Kind.Assignment,
    "+" : Kind.Add,
    "-" : Kind.Subtract,
    "*" : Kind.Multiply,
    "/" : Kind.Divide,
    "%" : Kind.Modulo,
    "==" : Kind.Equal,
    "!=" : Kind.NotEqual,
    "<" : Kind.LessThan,
    ">" : Kind.GreaterThan,
    "<=" : Kind.LessOrEqual,
    ">=" : Kind.GreaterOrEqual,
    "," : Kind.Comma,
    ":" : Kind.Colon,
    ";" : Kind.Semicolon,
    "(" : Kind.LeftParen,
    ")" : Kind.RightParen,
    "{" : Kind.LeftBrace,
    "}" : Kind.RightBrace,
    "[" : Kind.LeftBraket,
    "]" : Kind.RightBraket,
};
Object.freeze(stringToKind);

function toKind(string) {
    if (string in stringToKind)
        return stringToKind[string];
    return Kind.Unknown;
}